""" " –í—ã–≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ç 1 –¥–æ 10.

–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç 5 —á–∏—Å–µ–ª –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ä–µ–¥–Ω–µ–µ.

–ò–≥—Ä–∞: —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 (—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –ø–æ–ø—ã—Ç–∫–∞–º).

–ù–∞–π–¥–∏ –≤—Å–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100 –∏ –∑–∞–ø–∏—à–∏ –∏—Ö –≤ —Å–ø–∏—Å–æ–∫."""


def cycle():
    count = int(input("—Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã —É–º–Ω–æ–∂–µ–Ω–∏—è? "))
    for i in range(1, count + 1):
        for j in range(1, count + 1):
            result = i * j
            print(i, "X", j, "=", result)


def middle_number():
    count = int(input("–°–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏? "))
    numbers = []
    for i in range(count):
        number = float(input(f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ ‚Ññ{i + 1}: "))
        numbers.append(number)
    average = sum(numbers) / len(numbers)
    print("–°—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ:", average)


def game():
    import random

    secret_number = random.randint(1, 100)
    max_attempts = 5

    for attempt in range(1, max_attempts + 1):
        guess = int(input(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt}. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: "))

        if guess < 0:
            print("–Ω–µ–ª—å–∑—è –≤–≤–æ–¥–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞")
        elif guess < secret_number:
            print("–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ!")
        elif guess > secret_number:
            print("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ!")

        else:
            print(f"üéâ –£–≥–∞–¥–∞–ª –∑–∞ {attempt} –ø–æ–ø—ã—Ç–æ–∫!")
            break
    else:
        print(f"üò¢ –£–≤—ã, —Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª. –≠—Ç–æ –±—ã–ª–æ —á–∏—Å–ª–æ {secret_number}")


def even():
    count = int(input("–¥–æ –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞? "))
    even_numbers = []

    for i in range(1, count + 1):
        if i % 2 == 0:
            even_numbers.append(i)

    print(f"–ß—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ {count} :", even_numbers)


if __name__ == "__main__":
    cycle()
    middle_number()
    game()
    even()
